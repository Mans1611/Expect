{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Mans1611\\\\Expect\\\\Client\\\\expect\\\\src\\\\adminPage\\\\component\\\\PopAddMatch\\\\PopAddMatch.js\",\n    _s = $RefreshSig$();\n\nimport './popaddmatch.scss';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { useState } from 'react';\nimport SmallLaoding from '../../../component/loading/small.loading/smallLoading';\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport CountryPop from '../countryPop/CountryPop';\nimport AddIcon from '@mui/icons-material/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PopAddMatch = _ref => {\n  _s();\n\n  let {\n    showPop,\n    setShowPop\n  } = _ref;\n\n  const hidePop = e => {\n    if (e.target.className === 'popaddMatch') {\n      setShowPop(false);\n    }\n  };\n\n  const [isLoading, setLoading] = useState(true);\n  const [countries, setCountries] = useState(null);\n  const [firstCountry, setFirstCountry] = useState(null);\n  const [secondCountry, setSecondCountry] = useState(null);\n  const [showCountry, setShowCountry] = useState(false);\n  const [time, setMatchTime] = useState(null); // const [matchid,setMatchId] = useState(null);\n\n  useEffect(() => {\n    return async () => {\n      try {\n        const response = await axios.get('/country/countries');\n        setCountries(response.data);\n        setLoading(false);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n  }, []);\n\n  const handleSelect = e => {\n    e.preventDefault();\n    if (!document.querySelector('input[name=\"country\"]:checked')) return null;\n    const checkedCountry = document.querySelector('input[name=\"country\"]:checked').value;\n\n    if (!firstCountry) {\n      for (let country of countries) {\n        if (checkedCountry === country.countryName) {\n          setFirstCountry(country);\n          break;\n        }\n      }\n    } else {\n      for (let country of countries) {\n        if (checkedCountry === country.countryName) {\n          setSecondCountry(country);\n          break;\n        }\n      }\n    }\n\n    setShowCountry(false);\n  };\n\n  const handlePost = async () => {\n    const time = document.querySelector('input[name=\"time\"]').value;\n    const date = document.querySelector('input[name=\"date\"]').value;\n    const matchId = document.querySelector('input[name=\"matchId\"]').value;\n\n    if (time !== '' && date !== '' && firstCountry && secondCountry && matchId !== '') {\n      const matchTime = `${date} ${time}`;\n\n      try {\n        const response = await axios.post('/matches/addgame', {\n          matchTime,\n          firstCountry,\n          secondCountry,\n          matchId\n        });\n        console.log(response.data.msg);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popaddMatch\",\n    onClick: hidePop,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popAddMatchContainer\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(SmallLaoding, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(CloseIcon, {\n          onClick: () => {\n            setShowPop(false);\n          },\n          className: \"closeIcon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selectedContries\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selectedCountry\",\n            children: firstCountry ? /*#__PURE__*/_jsxDEV(CountryPop, {\n              logo: firstCountry.logo,\n              countryName: firstCountry.countryName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 40\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                setShowCountry(true);\n              },\n              className: \"circle\",\n              children: /*#__PURE__*/_jsxDEV(AddIcon, {\n                className: \"icons\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 87\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"vs\",\n            children: \"VS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selectedCountry\",\n            children: secondCountry ? /*#__PURE__*/_jsxDEV(CountryPop, {\n              logo: secondCountry.logo,\n              countryName: secondCountry.countryName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                setShowCountry(true);\n              },\n              className: \"circle\",\n              children: /*#__PURE__*/_jsxDEV(AddIcon, {\n                className: \"icons\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 186\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 125\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fieldContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Select time Of the match\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timeSelection\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timing\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"matchDate\",\n                children: \" Select Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                name: \"date\",\n                id: \"matchDate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timing\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"matchtime\",\n                children: \" Select Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                name: \"time\",\n                id: \"matchtime\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fieldContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"matchId\",\n            children: \"Match Id : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"matchId\",\n            id: \"matchId\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttonWrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePost,\n            children: \"Save The Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), showCountry && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"countriesSelection\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            action: \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"innergrid\",\n              children: countries.map((country, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                value: country.countryName,\n                className: \"country\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"country\",\n                  id: country.countryName,\n                  value: country.countryName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: country.countryName,\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    value: country.countryName,\n                    className: \"countryFlage\",\n                    src: country.logo,\n                    alt: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 31\n                  }, this), country.countryName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 29\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"buttonWrapper\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleSelect,\n                children: \"OK\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PopAddMatch, \"s0w+3hCkT4YpvslG9bBpMSVdGdg=\");\n\n_c = PopAddMatch;\nexport default PopAddMatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopAddMatch\");","map":{"version":3,"sources":["C:/Users/hp/Desktop/Mans1611/Expect/Client/expect/src/adminPage/component/PopAddMatch/PopAddMatch.js"],"names":["CloseIcon","useState","SmallLaoding","useEffect","axios","CountryPop","AddIcon","PopAddMatch","showPop","setShowPop","hidePop","e","target","className","isLoading","setLoading","countries","setCountries","firstCountry","setFirstCountry","secondCountry","setSecondCountry","showCountry","setShowCountry","time","setMatchTime","response","get","data","err","console","log","handleSelect","preventDefault","document","querySelector","checkedCountry","value","country","countryName","handlePost","date","matchId","matchTime","post","msg","logo","map","index"],"mappings":"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","sourcesContent":["import './popaddmatch.scss' ; \r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { useState } from 'react';\r\nimport SmallLaoding from '../../../component/loading/small.loading/smallLoading';\r\nimport { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport CountryPop from '../countryPop/CountryPop';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nconst PopAddMatch = ({showPop,setShowPop}) => {\r\n  const hidePop = (e)=>{\r\n      if(e.target.className === 'popaddMatch'){\r\n        setShowPop(false);\r\n      }\r\n  }\r\n  const [isLoading,setLoading] = useState(true);\r\n  const [countries,setCountries] = useState(null);\r\n  const [firstCountry,setFirstCountry] = useState(null)\r\n  const [secondCountry,setSecondCountry] = useState(null);\r\n  const [showCountry,setShowCountry] = useState(false);\r\n  const [time,setMatchTime] = useState(null);\r\n  // const [matchid,setMatchId] = useState(null);\r\n  useEffect(()=>{\r\n    return async ()=>{\r\n      try{\r\n        const response = await axios.get('/country/countries');\r\n        setCountries(response.data);\r\n        setLoading(false);\r\n      }catch(err){\r\n        console.log(err);\r\n      }\r\n    }\r\n  },[])\r\n\r\n  const handleSelect = (e)=>{\r\n    e.preventDefault();\r\n    if(!document.querySelector('input[name=\"country\"]:checked'))\r\n      return null;\r\n\r\n    const checkedCountry =  document.querySelector('input[name=\"country\"]:checked').value;\r\n\r\n    if(!firstCountry){\r\n      for(let country of countries){\r\n        if(checkedCountry === country.countryName){\r\n          setFirstCountry(country);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n      else {\r\n        for(let country of countries){\r\n          if(checkedCountry === country.countryName){\r\n            setSecondCountry(country);\r\n            break;\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n    setShowCountry(false);\r\n  }\r\n\r\n  const handlePost = async()=>{\r\n    const time = document.querySelector('input[name=\"time\"]').value;\r\n    const date = document.querySelector('input[name=\"date\"]').value;\r\n    const matchId = document.querySelector('input[name=\"matchId\"]').value;\r\n    if(time !=='' && date !=='' && firstCountry  && secondCountry && matchId !==''){\r\n      const matchTime = `${date} ${time}`;\r\n      try{\r\n        const response = await axios.post('/matches/addgame',{\r\n          matchTime,\r\n          firstCountry,\r\n          secondCountry,\r\n          matchId\r\n        })\r\n        console.log(response.data.msg);\r\n      }catch(err){\r\n        console.log(err);\r\n      }\r\n\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n  \r\n  \r\n\r\n    return (\r\n        <div className=\"popaddMatch\" onClick={hidePop}>\r\n          <div className=\"popAddMatchContainer\">\r\n          { isLoading? <SmallLaoding/> :( \r\n            <>\r\n                    <CloseIcon onClick={()=>{setShowPop(false)}} className='closeIcon'/>\r\n                    <div className=\"selectedContries\">\r\n\r\n                      <div className='selectedCountry'>\r\n                        {firstCountry? <CountryPop logo={firstCountry.logo} countryName={firstCountry.countryName}/> :  \r\n                        <div  onClick={()=>{setShowCountry(true)}} className=\"circle\"><AddIcon className='icons'/></div>}\r\n                      </div>\r\n                      <span className=\"vs\">VS</span>\r\n                      <div className='selectedCountry'>\r\n                      {\r\n                         secondCountry? <CountryPop logo={secondCountry.logo} countryName={secondCountry.countryName} /> :  <div onClick={()=>{setShowCountry(true)}} className=\"circle\"><AddIcon className='icons'/></div>\r\n                        }\r\n                      </div>\r\n\r\n                    </div>\r\n                    <div className='fieldContainer'>\r\n                        <h2>Select time Of the match</h2>\r\n                        <div className=\"timeSelection\">\r\n                          <div className=\"timing\">\r\n                            <label htmlFor=\"matchDate\"> Select Date</label>\r\n                            <input type=\"date\" name=\"date\" id=\"matchDate\"/>\r\n                          </div>\r\n                          <div className=\"timing\">\r\n                            <label htmlFor=\"matchtime\"> Select Time</label>\r\n                            <input type=\"time\" name=\"time\" id=\"matchtime\"/>\r\n                          </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"fieldContainer\">\r\n                      <label htmlFor=\"matchId\">Match Id : </label>\r\n                      <input type=\"text\" name=\"matchId\" id=\"matchId\" />\r\n                    </div>\r\n                    <div className=\"buttonWrapper\">\r\n                      <button onClick={handlePost} >Save The Game</button>\r\n                    </div>\r\n                    {showCountry&&\r\n                    (\r\n                      <div className=\"countriesSelection\">\r\n\r\n                      <form action=\"\">\r\n\r\n                      <div className=\"innergrid\">\r\n\r\n                        {\r\n                        countries.map((country,index)=>(\r\n                        <div value={country.countryName}  className='country' key={index}>\r\n                            <input type=\"radio\" name=\"country\" id={country.countryName} value = {country.countryName} />\r\n                            \r\n                            <label htmlFor={country.countryName}>\r\n                              <img value={country.countryName} className='countryFlage' src={country.logo} alt=\"\" />\r\n                              {country.countryName}\r\n                              </label>\r\n                        </div>\r\n                        ))\r\n                      }\r\n                      </div>\r\n                      \r\n                      <div className=\"buttonWrapper\">\r\n                          <button onClick={handleSelect} >OK</button>\r\n                      </div>\r\n\r\n                      </form>\r\n                    </div>\r\n                    )}\r\n                    \r\n                    </>\r\n                )\r\n              }\r\n              </div>\r\n        </div>\r\n      );\r\n}\r\n \r\nexport default PopAddMatch;"]},"metadata":{},"sourceType":"module"}