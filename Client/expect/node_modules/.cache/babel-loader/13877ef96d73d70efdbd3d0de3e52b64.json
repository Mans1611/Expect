{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Mans1611\\\\Expect\\\\Client\\\\expect\\\\src\\\\component\\\\matchcards\\\\MatchCard.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { connect } from 'react-redux';\nimport fetchData from '../../fetchData';\nimport Loading from '../loading/big.loading/Loading'; //import fetchData from '../../fetchData';\n\nimport PopMatchCard from '../popmatchcard/PopMatchCard';\nimport './matchcard.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MathchCard = props => {\n  _s();\n\n  const [hours, setHours] = useState(0);\n  const [min, setMin] = useState(0);\n  const [sec, setSec] = useState(0);\n  const [display, setDisplay] = useState(true);\n  const [pop, setPop] = useState(false);\n\n  const togglePop = () => {\n    setPop(!pop);\n  }; // const counter = useCallback(()=>{   \n  //     const time = props.match.time;\n  //     setInterval(()=>{\n  //         let current = new Date().getTime();\n  //         let left = time-current;\n  //         setHours(Math.floor(left/(1000*60*60)))\n  //         setMin(Math.floor((left%(1000*60*60))/(1000*60)));\n  //         setSec();\n  //         if(hours<0)\n  //             setDisplay(false)\n  //     },1000)\n  //     },[sec])\n  // console.log(counter);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `matchCard ${props.dark ? 'dark' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"matchcardHeader\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"matchCardCountry\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: props.match.country1.logo,\n          alt: \"\",\n          className: \"matchCardCountryImg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"countryLabel\",\n          children: props.match.country1.countryName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }, this), \"VS\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"matchCardCountry\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: props.match.country2.logo,\n          alt: \"\",\n          className: \"matchCardCountryImg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"countryLabel\",\n          children: props.match.country2.countryName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), display && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"matchCardCounter\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"timeLeftLabel\",\n        children: \"Time Left:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"timeLeft\",\n        children: [hours, \":\", min, \":\", sec]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"matchCardStart\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: togglePop,\n        className: \"matchCardbutton\",\n        children: \"Expext\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), pop && /*#__PURE__*/_jsxDEV(PopMatchCard, {\n      pop: pop,\n      togglePop: togglePop,\n      dark: props.dark,\n      match: props.match\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}; // const mapStateToProps = (state)=>{\n//     return {\n//         dark:state.dark,\n//     }\n// }\n\n\n_s(MathchCard, \"QFpLfAJ+Wd2Hu8zo53Wu4oh5R9A=\");\n\n_c = MathchCard;\nexport default MathchCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MathchCard\");","map":{"version":3,"sources":["C:/Users/hp/Desktop/Mans1611/Expect/Client/expect/src/component/matchcards/MatchCard.js"],"names":["useCallback","useEffect","useMemo","useState","connect","fetchData","Loading","PopMatchCard","MathchCard","props","hours","setHours","min","setMin","sec","setSec","display","setDisplay","pop","setPop","togglePop","dark","match","country1","logo","countryName","country2"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport fetchData from '../../fetchData';\r\nimport Loading from '../loading/big.loading/Loading';\r\n//import fetchData from '../../fetchData';\r\nimport PopMatchCard from '../popmatchcard/PopMatchCard';\r\nimport './matchcard.scss';\r\nconst MathchCard = (props) => {\r\n    const [hours,setHours] = useState(0);\r\n    const [min,setMin] = useState(0);\r\n    const [sec,setSec] = useState(0);\r\n    const [display,setDisplay] = useState(true); \r\n    const [pop,setPop] = useState(false);\r\n    \r\n    const togglePop = ()=>{\r\n        setPop(!pop);\r\n    }\r\n    \r\n    \r\n    \r\n    // const counter = useCallback(()=>{   \r\n    //     const time = props.match.time;\r\n    //     setInterval(()=>{\r\n    //         let current = new Date().getTime();\r\n    //         let left = time-current;\r\n    //         setHours(Math.floor(left/(1000*60*60)))\r\n    //         setMin(Math.floor((left%(1000*60*60))/(1000*60)));\r\n    //         setSec();\r\n    //         if(hours<0)\r\n    //             setDisplay(false)\r\n    //     },1000)\r\n    //     },[sec])\r\n    // console.log(counter);\r\n    return ( \r\n        <div className={`matchCard ${props.dark?'dark':''}`}>\r\n            \r\n            \r\n        \r\n            <div className=\"matchcardHeader\">\r\n              <div className=\"matchCardCountry\"> {/* country1.*/ }\r\n                <img src={props.match.country1.logo} alt=\"\" className=\"matchCardCountryImg\" />\r\n                <span className='countryLabel'>{props.match.country1.countryName}</span>\r\n              </div>\r\n                VS\r\n                <div className=\"matchCardCountry\">\r\n                    <img src={props.match.country2.logo} alt=\"\" className=\"matchCardCountryImg\" />\r\n                    <span className='countryLabel'>{props.match.country2.countryName}</span>\r\n                </div>\r\n            </div>\r\n            { display &&\r\n                <div className=\"matchCardCounter\">\r\n                    <span className=\"timeLeftLabel\">Time Left:</span>\r\n                    <span className=\"timeLeft\">{hours}:{min}:{sec}</span>\r\n                </div>\r\n            }\r\n                <div className=\"matchCardStart\">\r\n                    <button onClick={togglePop} className='matchCardbutton'>Expext</button>\r\n                </div>\r\n                \r\n                {\r\n                    pop && <PopMatchCard pop={pop} togglePop={togglePop} dark = {props.dark} match={props.match}/>\r\n                }\r\n           </div>\r\n     );\r\n}\r\n// const mapStateToProps = (state)=>{\r\n//     return {\r\n//         dark:state.dark,\r\n//     }\r\n// }\r\n\r\nexport default MathchCard;"]},"metadata":{},"sourceType":"module"}