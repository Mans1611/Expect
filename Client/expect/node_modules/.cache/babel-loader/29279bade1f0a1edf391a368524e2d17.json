{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Mans1611\\\\Expect\\\\Client\\\\expect\\\\src\\\\component\\\\navbar\\\\Navbar.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Outlet } from 'react-router-dom';\nimport './navbar.scss';\nimport LightModeIcon from '@mui/icons-material/LightMode';\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\nimport BottomNavbar from './bottomnavbar/BottomNavbar';\nimport { ThemeContext } from '../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Navbar = props => {\n  _s();\n\n  const [width, setWidth] = useState(window.innerWidth);\n  const [scale, setScale] = useState(width < 680 ? true : false);\n  let items = document.getElementsByClassName('navbarLink');\n  const navbarItems = [\"Home\", \"Matches\", \"MyExpects\", \"Standing\"];\n  const {\n    theme,\n    setTheme\n  } = useContext(ThemeContext);\n  useEffect(() => {\n    for (let i = 0; i < items.length; i++) {\n      items[i].addEventListener('click', function () {\n        let previousSelected = document.getElementsByClassName('selected');\n\n        if (previousSelected[0]) {\n          previousSelected[0].className = previousSelected[0].className.replace(' selected', '');\n        }\n\n        this.className += ' selected';\n      });\n    }\n\n    setScale(width < 680 ? true : false);\n  }, []);\n  window.addEventListener('resize', () => {\n    setWidth(window.innerWidth);\n    setScale(width < 680 ? true : false);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `navbar ${props.dark ? 'dark' : \"\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navbarContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"navbarLeft\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              className: `navbarLink ${props.dark ? 'dark' : \"\"}`,\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Expect\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 85\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"navbarRight\",\n            children: [!scale && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: navbarItems.map((item, index) => {\n                // to reduce the code lines \n                return /*#__PURE__*/_jsxDEV(Link, {\n                  to: `${item.toLowerCase()}`,\n                  className: `navbarLink ${props.dark ? 'dark' : \"\"}`,\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"navbarRightItem\",\n                    children: item\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 47,\n                    columnNumber: 132\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 32\n                }, this);\n              })\n            }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"navbarMenu\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"imgContainer\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"navbarProfileImg\",\n                  src: \"https://cdn.dribbble.com/users/1040983/screenshots/5630845/media/e95768b82810699dfd54512ff570954a.png?compress=1&resize=400x300&vertical=top\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"username\",\n                  children: \"Manfas\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 24\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"navbarDropdown\",\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/myprofile\",\n                  className: `navbarLink ${props.dark ? 'dark' : \"\"}`,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"dropdownItem\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"dropdownItem\",\n                      children: \"My Profile\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 59,\n                      columnNumber: 133\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 103\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  onClick: props.toggleDark,\n                  className: `dropdownItem ${props.dark ? 'dark' : ''}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"dropdownItem\",\n                    children: \"Dark Mode\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"circleContainer\",\n                    children: [/*#__PURE__*/_jsxDEV(LightModeIcon, {\n                      color: \"warning\",\n                      className: \"darkModeIcons\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 63,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(DarkModeIcon, {\n                      className: \"darkModeIcons\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 64,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `circle ${props.dark ? ' right' : ''}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 65,\n                      columnNumber: 37\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/\",\n                  className: `navbarLink ${props.dark ? 'dark' : \"\"}`,\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"dropdownItem\",\n                    children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"dropdownItem\",\n                      children: \"Log out\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 68,\n                      columnNumber: 126\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 95\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 24\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), scale && /*#__PURE__*/_jsxDEV(BottomNavbar, {\n        toggleDark: props.toggleDark,\n        dark: props.dark\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Navbar, \"gJi8/nLRHN8TePrkXyGS3Yj2/+s=\");\n\n_c = Navbar;\n\nfunction mapStatesToProps(state) {\n  return {\n    dark: state.dark\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    toggleDark: () => dispatch({\n      type: 'TOGGLE'\n    })\n  };\n}\n\nexport default connect(mapStatesToProps, mapDispatchToProps)(Navbar);\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["C:/Users/hp/Desktop/Mans1611/Expect/Client/expect/src/component/navbar/Navbar.js"],"names":["createContext","useContext","useEffect","useState","connect","Link","Outlet","LightModeIcon","DarkModeIcon","BottomNavbar","ThemeContext","Navbar","props","width","setWidth","window","innerWidth","scale","setScale","items","document","getElementsByClassName","navbarItems","theme","setTheme","i","length","addEventListener","previousSelected","className","replace","dark","map","item","index","toLowerCase","toggleDark","mapStatesToProps","state","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import { createContext, useContext, useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Outlet } from 'react-router-dom';\r\nimport './navbar.scss';\r\nimport LightModeIcon from '@mui/icons-material/LightMode';\r\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\r\nimport BottomNavbar from './bottomnavbar/BottomNavbar';\r\nimport { ThemeContext } from '../../App';\r\n\r\nconst Navbar = (props) => {\r\n    const [width , setWidth] = useState(window.innerWidth);\r\n    const [scale, setScale] = useState(((width<680)? true : false));\r\n    let items = document.getElementsByClassName('navbarLink');\r\n    const navbarItems = [\"Home\" , \"Matches\",\"MyExpects\", \"Standing\"];\r\n    const {theme,setTheme} = useContext(ThemeContext);\r\n    \r\n    useEffect(()=>{\r\n        for(let i = 0 ; i<items.length;i++){\r\n            items[i].addEventListener('click',function(){\r\n                let previousSelected = document.getElementsByClassName('selected');\r\n                if(previousSelected[0]){\r\n                    previousSelected[0].className = previousSelected[0].className.replace(' selected','');\r\n                }\r\n                this.className += ' selected';\r\n            })\r\n        } \r\n        setScale(((width<680)? true : false))\r\n    } \r\n    ,[])\r\n    \r\n\r\n    window.addEventListener('resize',()=>{\r\n        setWidth(window.innerWidth);\r\n        setScale(((width<680)? true : false))\r\n    })    \r\n    return ( \r\n        <>\r\n        <>\r\n        <div  className={`navbar ${props.dark? 'dark': \"\"}`}>\r\n            <div className=\"navbarContainer\">\r\n                <div className=\"navbarLeft\">\r\n                    <Link to=\"/\" className={`navbarLink ${props.dark? 'dark': \"\"}`}><h1>Expect</h1></Link>\r\n                </div>\r\n                <div className=\"navbarRight\">\r\n                    {!scale && <>\r\n                    {   navbarItems.map((item,index)=>{ // to reduce the code lines \r\n                        return <Link key={index} to = {`${item.toLowerCase()}`} className={`navbarLink ${props.dark? 'dark': \"\"}`}><span className=\"navbarRightItem\" key={index}>{item}</span></Link>    \r\n                    })\r\n\r\n                    }\r\n                        </>\r\n                    }\r\n                    <div className=\"navbarMenu\">\r\n                       <div className=\"imgContainer\">\r\n                        <img className='navbarProfileImg' src=\"https://cdn.dribbble.com/users/1040983/screenshots/5630845/media/e95768b82810699dfd54512ff570954a.png?compress=1&resize=400x300&vertical=top\" />\r\n                        <span className=\"username\">Manfas</span>\r\n                       </div>\r\n                       <div className='navbarDropdown'>\r\n                            <Link to='/myprofile'  className={`navbarLink ${props.dark? 'dark': \"\"}`}><div className=\"dropdownItem\"><span className=\"dropdownItem\">My Profile</span></div></Link>\r\n                            <div onClick={props.toggleDark} className={`dropdownItem ${props.dark? 'dark':''}` }>\r\n                                <span className=\"dropdownItem\">Dark Mode</span>\r\n                                <div className=\"circleContainer\">\r\n                                    <LightModeIcon color=\"warning\" className='darkModeIcons'/>\r\n                                    <DarkModeIcon className='darkModeIcons'/>\r\n                                    <div className={`circle ${props.dark?' right':''}`}></div>\r\n                                </div>\r\n                            </div>\r\n                            <Link to='/'  className={`navbarLink ${props.dark? 'dark': \"\"}`}> <div className=\"dropdownItem\"> <span className=\"dropdownItem\">Log out</span></div></Link>\r\n                       </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {scale && <BottomNavbar toggleDark={props.toggleDark} dark={props.dark}/>}\r\n        </>\r\n        <Outlet/>\r\n        </>\r\n     );\r\n}\r\n\r\nfunction mapStatesToProps(state){\r\nreturn {dark:state.dark}\r\n}\r\n \r\nfunction mapDispatchToProps(dispatch){\r\n    return {toggleDark: ()=> dispatch({type:'TOGGLE'})}\r\n    }\r\n\r\n    \r\nexport default connect(mapStatesToProps,mapDispatchToProps)(Navbar);\r\n"]},"metadata":{},"sourceType":"module"}