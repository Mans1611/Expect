{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Mans1611\\\\Expect\\\\Client\\\\expect\\\\src\\\\pages\\\\matches\\\\Matches.js\",\n    _s = $RefreshSig$();\n\nimport { connect } from 'react-redux';\nimport MathchCard from '../../component/matchcards/MatchCard';\nimport { useState, useEffect } from 'react';\nimport Loading from '../../component/loading/Loading';\nimport './match.scss';\nimport fetchData from '../../fetchData';\nimport NotFound from '../../component/NotFound/NotFound';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Matches = props => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isLoading, setLoading] = useState(true);\n  const [notFound, setNoutFound] = useState(false);\n  useEffect(() => {\n    return async () => {\n      try {\n        const matches = await fetchData('/matches/getmatches');\n        setLoading(false);\n        setData(matches);\n        console.log(matches);\n      } catch (err) {\n        setNoutFound(true);\n        setLoading(false);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 24\n    }, this) : !data ? /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `match  ${props.dark ? 'dark' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"matchWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"matchTitle\",\n          children: \"UpComming Matches\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"matchCardContainer\",\n          children: data.map((value, key) => {\n            return /*#__PURE__*/_jsxDEV(MathchCard, {\n              dark: props.dark,\n              match: data[key]\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 45\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(Matches, \"0cbscVEW4qmbavuk6vJTNlRIOBM=\");\n\n_c = Matches;\n\nconst mapStateToProps = state => {\n  return {\n    dark: state.dark,\n    matches: state.matches\n  };\n};\n\nexport default connect(mapStateToProps)(Matches);\n\nvar _c;\n\n$RefreshReg$(_c, \"Matches\");","map":{"version":3,"sources":["C:/Users/hp/Desktop/Mans1611/Expect/Client/expect/src/pages/matches/Matches.js"],"names":["connect","MathchCard","useState","useEffect","Loading","fetchData","NotFound","Matches","props","data","setData","isLoading","setLoading","notFound","setNoutFound","matches","console","log","err","dark","map","value","key","mapStateToProps","state"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,sCAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,iCAApB;AACA,OAAO,cAAP;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,QAAP,MAAqB,mCAArB;;;;AACA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AAEvB,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBR,QAAQ,CAAC,IAAD,CAA/B;AACA,QAAM,CAACS,SAAD,EAAWC,UAAX,IAAyBV,QAAQ,CAAC,IAAD,CAAvC;AACA,QAAM,CAACW,QAAD,EAAUC,YAAV,IAA0BZ,QAAQ,CAAC,KAAD,CAAxC;AACDC,EAAAA,SAAS,CAAE,MAAI;AACd,WAAO,YAAY;AACf,UAAG;AACC,cAAMY,OAAO,GAAG,MAAMV,SAAS,CAAC,qBAAD,CAA/B;AACAO,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,QAAAA,OAAO,CAACK,OAAD,CAAP;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACH,OALD,CAKC,OAAMG,GAAN,EAAU;AACPJ,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACAF,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,KAVD;AAWH,GAZW,EAYV,EAZU,CAAT;AAcC,sBACQ;AAAA,cACAD,SAAS,gBAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAF,GACN,CAACF,IAAD,gBAAO,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAAP,gBACC;AAAK,MAAA,SAAS,EAAI,UAASD,KAAK,CAACW,IAAN,GAAW,MAAX,GAAkB,EAAG,EAAhD;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,oBAEQV,IAAI,CAACW,GAAL,CAAS,CAACC,KAAD,EAAOC,GAAP,KAAa;AAClB,gCAAQ,QAAC,UAAD;AAAY,cAAA,IAAI,EAAEd,KAAK,CAACW,IAAxB;AAAwC,cAAA,KAAK,EAAGV,IAAI,CAACa,GAAD;AAApD,eAAmCA,GAAnC;AAAA;AAAA;AAAA;AAAA,oBAAR;AACH,WAFD;AAFR;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAHJ,mBADR;AAuBH,CA1CD;;GAAMf,O;;KAAAA,O;;AA2CN,MAAOgB,eAAe,GAAIC,KAAD,IAAU;AAC/B,SAAO;AACHL,IAAAA,IAAI,EAACK,KAAK,CAACL,IADR;AAEHJ,IAAAA,OAAO,EAAGS,KAAK,CAACT;AAFb,GAAP;AAIH,CALD;;AAOA,eAAef,OAAO,CAACuB,eAAD,CAAP,CAAyBhB,OAAzB,CAAf","sourcesContent":["import { connect } from 'react-redux';\r\nimport MathchCard from '../../component/matchcards/MatchCard';\r\nimport { useState, useEffect } from 'react';\r\nimport Loading from '../../component/loading/Loading';\r\nimport './match.scss';\r\nimport fetchData from '../../fetchData';\r\nimport NotFound from '../../component/NotFound/NotFound';\r\nconst Matches = (props) => {\r\n   \r\n    const [data,setData] = useState(null);\r\n    const [isLoading,setLoading] = useState(true);\r\n    const [notFound,setNoutFound] = useState(false);\r\n   useEffect( ()=>{\r\n    return async () => {\r\n        try{\r\n            const matches = await fetchData('/matches/getmatches');\r\n            setLoading(false);\r\n            setData(matches);\r\n            console.log(matches);\r\n        }catch(err){\r\n            setNoutFound(true);\r\n            setLoading(false);  \r\n        }\r\n    } \r\n},[]);\r\n   \r\n    return ( \r\n            <>\r\n           {isLoading? <Loading/>: (\r\n               !data? <NotFound/>:\r\n                <div className= {`match  ${props.dark?'dark':''}` } >\r\n                    <div className=\"matchWrapper\">\r\n                        <h1 className=\"matchTitle\">UpComming Matches</h1>\r\n                        <div className=\"matchCardContainer\">\r\n                            {\r\n                                data.map((value,key)=>{\r\n                                    return (<MathchCard dark={props.dark} key={key} match ={data[key]}/>)   \r\n                                })\r\n                            }\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n           )\r\n           \r\n            \r\n            }\r\n        </>\r\n     );\r\n}\r\nconst  mapStateToProps = (state) =>{\r\n    return {\r\n        dark:state.dark,\r\n        matches : state.matches\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Matches);"]},"metadata":{},"sourceType":"module"}